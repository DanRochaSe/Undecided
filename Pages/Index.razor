@page "/"


@using UndecidedApp.Data
@using UndecidedApp.Data.Models.PostModels
@using MongoDB.Bson
@using UndecidedApp.Services
@using UndecidedApp.Shared

@inject PostService postServices;

@if(posts == null)
{
    <div>Loading...</div>
}
else
{
    <div class="col-sm-12">
        <div class="row justify-content-around">
            @foreach (var post in posts.Take(2))
            {
                <PostCard post="post" />
            }
        </div>
    </div>
    <br/>
    <table class="table table-borderless">
        <thead>
            <tr>
                <th scope="col">#</th>
                <th scope="col">Title</th>
                <th scope="col">Body</th>
                <th scope="col">Tags</th>
            </tr>
        </thead>
        <tbody>
            @foreach(var post in posts.Skip(2))
            {
                <PostList post="post" />
            }
        </tbody>
    </table>

}



<button @onclick=AddPost>Add Post</button>


@code{
    private IEnumerable<Post> posts;

    
    protected override async Task OnInitializedAsync()
    {
        // if(authenticationStateTask != null)
        // {
        //     var authState = await authenticationStateTask;
        //     var user = authState?.User;

        //     if(user?.Identity is not null && user.Identity.IsAuthenticated)
        //     {
        //         authMessage = "The user is authenticated";
        //     }
        // };

        posts = await postServices.GetAllPost();

    }

    protected async void AddPost()
    {
        Post newPost = new Post();
        newPost.Title = "Test1";
        newPost.PostBody = "Test 1 ahas;aspdo as;dk asd;as";
        newPost.Tags = ["Test", "Mongo"];
        postServices.AddPost(newPost);
        await OnInitializedAsync();
    }

}
