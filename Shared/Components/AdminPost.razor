@page "/newpost"

@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Authorization
@using UndecidedApp.Data.Models.PostModels
@using UndecidedApp.Pages
@using UndecidedApp.Services
@using UndecidedApp.Shared

@inject PostService postServices;
@inject IJSRuntime JS
@inject ImageUploader _imgUploader


@attribute [Authorize(Roles = "Admin")]
<div style="min-height:85vh; background-color: lightgrey; padding: 10px;">

    <h2>Create new post</h2>

<form class="row g-3 p-5 needs-validation" novalidate @onsubmit="@HandleSubmit">
  <div class="col-md-6">
    <label for="validationCustom01" class="form-label">Title</label>
    <input type="text" class="form-control" id="validationCustom01" required>
    <div class="valid-feedback">
      Looks good!
    </div>
  </div>
  <div class="col-md-6">
    <label for="validationCustom02" class="form-label">Tags</label>
    <input type="text" class="form-control" id="validationCustom02" required>
    <div class="valid-feedback">
      Looks good!
    </div>
  </div>
  <div class="col-md-12">
    <label for="validationCustomUsername" class="form-label">Username</label>
    <div class="input-group has-validation">
      <textarea rows="15" cols="1" required @bind="@post.PostBody" style="width: 100%;" placeholder="Type here..." ></textarea>
      <div class="invalid-feedback">
        Please choose a username.
      </div>
    </div>
  </div>
  <div class="col-md-4">
    <label for="validationCustom03" class="form-label">City</label>
    <InputFile OnChange="HandleFileUpload" accept=".jpg,.jiff,.jpeg,.bpg" />
    <button type="submit" @onclick="UploadImage">Upload Image</button>
    <div class="invalid-feedback">
      Please provide a valid city.
    </div>
  </div>
  <div class="col-md-4">
      @if (!string.IsNullOrEmpty(_imagePath))
            {
                <img src="@_imagePath" alt="Uploaded Image" style="width: 100px; height: 100px;" />
            }
        </div>



  <div class="col-12">
    <button class="btn btn-primary" type="submit">Submit form</button>
  </div>
</form>

</div>
    @code {

    private Post post = new Post();
    private IBrowserFile _file;
    private string _imagePath;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await JS.InvokeVoidAsync("scrollToHeight");

    }

    protected override void OnParametersSet()
    {
        JS.InvokeVoidAsync("scrollToHeight");

    }

    public void HandleFileUpload(InputFileChangeEventArgs file)
    {
        _file = file.File;

    }

    public async Task UploadImage()
    {
        if(_file != null)
        {
            _imagePath = await _imgUploader.UploadImage(_file);
            StateHasChanged();
        }
    }


    protected void HandleSubmit()
    {
        var x = post.PostBody;

    }

}
