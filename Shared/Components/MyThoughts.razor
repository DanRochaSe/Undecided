@page "/thoughts"

@using UndecidedApp.Data.Models.PostModels
@using UndecidedApp.Pages
@using UndecidedApp.Services
@using UndecidedApp.Shared

@inject PostService postServices;
@inject IJSRuntime JS

<!-- Portfolio Section -->
<section id="thoughts" class="portfolio section">

    <!-- Section Title -->
    <div class="container section-title" data-aos="fade-up">
        <span class="description-title">Portfolio</span>
        <h2>Portfolio</h2>
        <p>Necessitatibus eius consequatur ex aliquid fuga eum quidem sint consectetur velit</p>
    </div><!-- End Section Title -->

    <div class="container-fluid">

        <div class="isotope-layout" data-default-filter="*" data-layout="masonry" data-sort="original-order">

            <div class="row g-0 isotope-container" data-aos="fade-up" data-aos-delay="200">

                @if (posts == null)
                {
                    <div>Loading...</div>

                }
                else
                {
                    @foreach (var post in posts.Take(12))
                    {
                        <div class="col-xl-3 col-lg-4 col-md-6 portfolio-item isotope-item">
                            <NavLink href="@($"post/{post?.PostID}")" Match="NavLinkMatch.Prefix" style="text-decoration: none; color: black;">

                                <div class="portfolio-content h-100">
                                    <div class="row" style="padding: 5px; max-height: 380px;">
                                        @if(post?.CoverImageURL == null)
                                        {
                                            <img src="/images/profile-img.jpg" class="img-fluid" alt="">

                                        }
                                        else
                                        {
                                            <img src="@post?.CoverImageURL?.ToString()" class="img-fluid" alt="">

                                        }
                                            <div class="portfolio-info">
                                                <h3 class="card-title" style="color: DarkOrange !important; text-align: center;">@post?.Title.ToString()<i class="fa-solid fa-fire" style="float: right; color: red !important;"></i></h3><br />
                                                <p class="card-text" style="font-weight: 500; font-size: 1.125rem; margin-bottom: 2rem;">@post?.PostBody.ToString().Substring(0, 30)</p>
                                                <p class="card-text" style="position: absolute; bottom: 0; text-align: end; margin-right: 10px;"><i class="fa-solid fa-tag"></i> @post?.Tags[1].ToString()</p>
                                        </div>
                                    </div>
                                   
                                </div>
                            </NavLink>

                        </div>
                    }

                }

            </div><!-- End Portfolio Container -->

        </div>

    </div>

    <button @onclick=AddPost>Add Post</button>



</section><!-- /Portfolio Section -->
@code {
    private IEnumerable<Post>? posts;

      
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await JS.InvokeVoidAsync("scrollToHeight");

    }

    protected override void OnParametersSet()
    {
        JS.InvokeVoidAsync("scrollToHeight");

    }


    protected override async Task OnInitializedAsync()
    {
        posts = await postServices.GetAllPost();
    }

    protected async void AddPost()
    {
        Post newPost = new Post();
        newPost.Title = "Test1";
        newPost.PostBody = "Test 1 ahas;aspdo as;dk asd;as";
        newPost.Tags = ["Test", "Mongo"];
        newPost.CoverImageURL = "/images/undecided2.jpg";
        postServices.AddPost(newPost);
        await OnInitializedAsync();
    }


}
